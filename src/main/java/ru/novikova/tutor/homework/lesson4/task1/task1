+Вариант 1.
Функция swap(int x, int y) меняет местами в памяти компьютера
две переменные x и y. В функции swap() необходимо реализовать
обработку ошибки в случае, если в качестве параметра передан null. Для
этого в начале функции реализуйте проверку значения на null и вызов
исключения NullPointerException в случае необходимости. В заголовке
функции необходимо указать, что она может вызывать исключение данного
типа.

+Вариант 2.
Создайте массив объектов. Удалите один из элементов массива.
Убедитесь, что при выполнении программы выводится сообщение
NullPointerException и выполнение программы прекращается.
Установите обработчик исключения в цикле, чтобы запретить
прекращение выполнения программы.
Убедитесь, что выполнение программы не прекращается при
возникновении ошибки, но при этом выводится соответствующее сообщение.

Вариант 3.
Создайте программу, которая переписывает содержание одного файла в
другой с перекодировкой. Предусмотреть исключительные ситуации (при
необходимости создать соответствующие классы), которые генерируются
программой в случае невозможности корректного выполнения чтения или записи.

+Вариант 4.
Создайте программу для демонстрации исключений типа
ArrayIndexOutOfBoundsException, FileNotFoundException, IOException.

+/-Вариант 5.
Создайте исключение, которое возникает при попытке создать новый
файл, который уже существует (IOException). При этом, работа приложения
должна быть продолжена, и пользователь должен получить уведомление, по
какой причине файл не может быть создан.

Вариант 6. 
Создайте класс, вкотором есть метод для вычисления функции
1 x . Создайте исключение, которое возникает, когда x≤10-10
. При этом, работа приложения должна быть продолжена, и пользователь должен получить
уведомление, по какой причине файл не может быть создан.

+Вариант 7.
Создайте метод для ввода целых чисел с клавиатуры. Создайте
обработчик исключения, которое возникает при вводе буквенного символа.
Обработчик должен выводить предупреждение и возвращаться к вводу числа.

Вариант 8.
Создайте метод для ввода целых чисел с клавиатуры. Метод генерирует
исключение IOException при вводе буквенного символа. Метод сам не
обрабатывет исключение. Обработчик должен выводить предупреждение и
возвращаться к вводу числа.

+Вариант 9.
Создайте метод для нахождения среднего значение элементов массива
типа double. Метод генерирует искдючение, если хотябы один из элементов
окажется отрицательным.

Вариант 10.
Создайте метод, который позволяет определить сколько раз в строке
встречается заданный символ. Метод генерирует исключение, если искомый
символ окажется цифрой или хотябы один из символов окажется цифрой.

+Вариант 11.
Создайте метод, который позволяет переставить элементы символьного
массива в обратном порядке. Если хотябы один символ является цифрой -
возникает исключение.

+Вариант 12.
Создайте метод, который принимает строку, введенную с клавиатуры.
Если хотябы один символ строки является цифрой, то возникает исключение
тиа IllegalArgumentException.

+Вариант 13.
Создайте метод, который принимает символьный массив. Если хотябы
один из элементов массива является пробелом, то возникает исключение
IllegalArgumentException.

Вариант 14.
Создайте метод, который принимает символьный массив, и имя файла,
после чего записывает массив в файл.

Вариант 15.
Создайте метод, который принимает имена двух файла, после чего
переписывает данные из одного файла в другой файл.

Вариант 16.
Создайте метод, который читает данные из двух файлов и соавнивает их.
Метод возвращаеи true если имеет место полное совпадение, в противном
случае возвращет false.

Вариант 17.
Создайте метод, который получая имя диска выводит на экран список
директорий. Предусмотрите исключение, возникающе при указании
несуществующего диска.

Вариант 18.
Создайте метод, который читает данные из файла построчно. Если
встречается пустая строка, то генерируется исключение. В любом случае
входной поток должен быть закрыт.

Вариант 19.
Создайте метод, который меняет местами имена файлов оставляя
содержимое. В случае отсутствия файла с указанным исенем генерируется
исключение.

Вариант 20.
Создайте метод, который находит сумму чисел типа int, записанных в
файле, находит их сумму и записывает в конец файла.

Вариант 21.
Создайте метод, который читает файл символов и записывает их в
обратном порядке.

Вариант 22
Создайте метод, который считывает из указанного файла массив чисел
типа int и сравнивает его с указанным массивом. Метод возвращаеи true если
имеет место полное совпадение, в противном случае возвращет false.

Вариант 23.
Создайте метод, который выполняет построчное сравнение двух файлов.
Метод возвращаеи true если имеет место полное совпадение, в противном
случае возвращет false.

Вариант 24.
Создайте метод, который возвращает символьный массив, полученный
в результате записи в него текста из указанного файла.

Вариант 25.
Создайте метод, который получает строку. Если в строке нет цифр, то
она выводится на экран. В противном случае создается исключение тиа
IllegalArgumentException.